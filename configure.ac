# assuming we have perl we can get the version number
# if not, we know right off that something wrong
VERSION=`perl -MBric -e 'print $Bric::VERSION'`

# Process this file with autoconf to produce a configure script.
AC_INIT(Bricolage,${VERSION}, http://bricolage-bugzilla.thepirtgroup.com)
AC_PREFIX_DEFAULT(/usr/local/bricolage)
# Installation directory overrides
# bricolage has historically used a slightly
# different directory scheme from the GNU standard
# we'll roll with it
# Use braces instead of parens because sh, perl, etc. also accept them.
datadir='${prefix}/data'
sysconfdir='${prefix}/conf'
# Capture the config string early.  This will wind up stored in
# a clear text file with open read perms, so get rid of the
# passwords.
CONFIG_STRING=`echo $@ | sed -e 's/ --with-dbi-pass=[^ ]*//g'`

# Additional --with-switches
# SYNTAX: AC_VAR_WITH(VARNAME,switchname,default)
AC_VAR_WITH(compdir,compdir,'${prefix}/comp')
AC_VAR_WITH(docdir,docdir,'${prefix}/doc')
AC_VAR_WITH(htmldir,htmldir,'${docdir}/html')
AC_VAR_WITH(blibdir,blibdir,'${prefix}/blib')
AC_VAR_WITH(APACHE_USER,apache-user,nobody)
AC_VAR_WITH(APACHE_GROUP,apache-group,nobody)
AC_VAR_WITH(HOSTNAME,hostname,`hostname --fqdn || true`)
AC_VAR_WITH(ADMINISTRATOR,administrator,root)
AC_VAR_WITH(DB_NAME,db-name,wwwdata)
AC_VAR_WITH(DBI_USER,dbi-user,nobody)
AC_VAR_WITH(DBI_PASS,dbi-pass)
AC_VAR_WITH(POSTGRES_ROOT_USER,pgroot-user,postgres)
AC_VAR_WITH(POSTGRES_SYSTEM_USER,pgsystem-user,postgres)
# TODO: System defaults for these can be determined from $APACHE -V
AC_VAR_WITH(SERVER_ROOT,server_root,/usr/local/apache)
AC_VAR_WITH(APACHE_CONF,apache-conf,'${prefix}/conf/httpd.conf')
AC_VAR_WITH(LOGDIR,log_dir,${SERVER_ROOT}/logs)
AC_VAR_WITH(ERROR_LOG,error_log,${LOGDIR}/error.log)
AC_VAR_WITH(ACCESS_LOG,access_log,${LOGDIR}/access.log)
AC_VAR_WITH(SSL_LOG,ssl_log,${LOGDIR}/ssl_engine_log)
AC_VAR_WITH(PID_FILE,pid_file,${LOGDIR}/httpd.pid)

# Warn if the specified user doesn't seem to 
# exist
AC_CHECK_SYS_USER(ISUSERHERE,${APACHE_USER})
if test "$ISUSERHERE" = "no" ;then
	AC_MSG_ERROR([

  There is no such user "${APACHE_USER}" in the system
  database.  Please add this user or run 
  	
  	./configure --with-apache-user=USER

  Where the user exists.

])
fi

# Warn if the specified group doesn't seem to exist
AC_CHECK_SYS_GROUP(ISGROUPHERE,${APACHE_GROUP},${APACHE_USER})
if test "$ISGROUPHERE" = "no" ;then
	AC_MSG_ERROR([

  There is no such group "${APACHE_GROUP}" in the system
  database.  Please add this group or run 
  	
  	./configure --with-apache-group=GROUP

  Where the group exists.

])
fi

# Checks for programs
AC_PROG_APACHE(1.3.12)
AC_PROG_POSTGRES(PGHOME, 7.1.3)
AC_PATH_PROG(PSQL, psql)
AC_PATH_PROG(DROPDB, dropdb)
AC_PATH_PROG(DROPUSER, dropuser)
AC_PATH_PROG(CREATEDB, createdb)
AC_POSTGRES_ENCODING(UNICODE)
AC_PROG_PERL(PERL, 5.6.1)
AC_PATH_PROG(POD2HTML, pod2html)
AC_POD2HTML(POD2HTML_TYPE)
AC_PATH_PROG(POD2TEXT, pod2text)
AC_PATH_PROG(POD2MAN, pod2man)
AC_PATH_PROG(GZIP, gzip)
AC_PATH_PROG(MKDIR, mkdir)
AC_PATH_PROG(FIND, find)
AC_PATH_PROG(CTAGS, ctags)
AC_CACHE_SAVE


# Checks for libraries.

# Check to see if apache has mod_perl compiled in
AC_CHECK_APACHE_MOD_PERL(AMOD_PERL,APACHE)
# If not, we're going to have to share the bad news
# and fail.  Bricolage requires a compiled in mod_perl
if test "${AMOD_PERL}" != "yes" ; then
	AC_MSG_ERROR([

	It appears that your apache binary was compiled without
	mod_perl support.  Bricolage will not run correctly 
	without mod_perl compiled into the Apache.

	])
fi

# Check for ssl option, and find ssl if yes
CHECK_SSL
SSL_COMMENT=
if test "${HAVE_SSL}" != "yes" ;then
	SSL_COMMENT='# '
fi
AC_SUBST(SSL_COMMENT)
AC_CACHE_SAVE

# check to see if CPAN Module is working correctly
AC_CHECK_CPAN(CPAN_WORKS)
if test "${CPAN_WORKS}" != "yes"; then
  AC_MSG_WARN([

  It would appear that you don't have the perl CPAN Module
  or that it can't connect to the net right now.  If you
  have net access and want the build process to fetch and
  install the required modules you should make sure that
  CPAN is installed and configured correctly, and that you
  are connected to the net and then re-run ./configure.  

  Otherwise you'll have to install the missing modules by
  hand.  After you runnning 'make' you'll find a list of
  these in the file inst/missing_modules.
])
fi

# This *can be* generated by a script in distutils
# The BEGIN and end comments are for that script.
# --BEGIN CPAN--
CHECK_CPAN_MODULE(MISSING_MOD,Cache::Cache,0.09)
CHECK_CPAN_MODULE(MISSING_MOD,HTML::Tagset,3.03)
CHECK_CPAN_MODULE(MISSING_MOD,Time::HiRes,01.20)
CHECK_CPAN_MODULE(MISSING_MOD,Test::Simple,0.33)
CHECK_CPAN_MODULE(MISSING_MOD,Apache::ConfigFile,0.14)
CHECK_CPAN_MODULE(MISSING_MOD,HTML::Template::Expr,0.3)
CHECK_CPAN_MODULE(MISSING_MOD,Apache::Session,1.53)
CHECK_CPAN_MODULE(MISSING_MOD,DBD::Pg,1.00)
CHECK_CPAN_MODULE(MISSING_MOD,Devel::Symdump,2.01)
CHECK_CPAN_MODULE(MISSING_MOD,LWP,5.50)
CHECK_CPAN_MODULE(MISSING_MOD,MD5,2.02)
CHECK_CPAN_MODULE(MISSING_MOD,HTML::Template,2.4)
CHECK_CPAN_MODULE(MISSING_MOD,Apache::libapreq,)
CHECK_CPAN_MODULE(MISSING_MOD,HTML::Mason,1.03)
CHECK_CPAN_MODULE(MISSING_MOD,Image::Info,1.07)
CHECK_CPAN_MODULE(MISSING_MOD,Params::Validate,0.04)
CHECK_CPAN_MODULE(MISSING_MOD,Text::Iconv,1.1)
CHECK_CPAN_MODULE(MISSING_MOD,Test::Harness,1.26)
CHECK_CPAN_MODULE(MISSING_MOD,HTML::Parser,3.23)
CHECK_CPAN_MODULE(MISSING_MOD,URI,1.12)
CHECK_CPAN_MODULE(MISSING_MOD,Digest::MD5,2.12)
CHECK_CPAN_MODULE(MISSING_MOD,Unix::Syslog,0.95)
CHECK_CPAN_MODULE(MISSING_MOD,Error,0.15)
CHECK_CPAN_MODULE(MISSING_MOD,Storable,1.0.10)
CHECK_CPAN_MODULE(MISSING_MOD,MLDBM,2.00)
CHECK_CPAN_MODULE(MISSING_MOD,XML::Writer,0.4)
CHECK_CPAN_MODULE(MISSING_MOD,Bundle::libnet,1.0703)
CHECK_CPAN_MODULE(MISSING_MOD,MIME::Base64,2.12)
CHECK_CPAN_MODULE(MISSING_MOD,Parse::RecDescent,1.80)
CHECK_CPAN_MODULE(MISSING_MOD,DBI,1.19)
CHECK_CPAN_MODULE(MISSING_MOD,Text::Balanced,1.89)
# --END CPAN--

AC_CACHE_SAVE

# Accept configuration details by environmental variable
# on the command line or otherwise
AC_ARG_VAR(PG_ROOT_PASS)
AC_CACHE_SAVE
CHECK_FOR_PGPASS

if test "x${DBI_PASS}" = "x" ; then
	defaults=no
	AC_PROMPT_USER_NO_DEFINE(DBI_PASS,[
We will be creating a new database user: ${DBI_USER}.
Please enter a password for this user.])
fi

if test "x${DBI_PASS}" = "x" ; then
	AC_MSG_ERROR(No database user password defined)
fi

# predefined
AC_SUBST(VERSION)
AC_SUBST(CONFIG_STRING)

# write out the makefiles
# TODO: The files here that aren't makefiles should eventually
# 		be handled by make, this is cheating in a way
AC_CONFIG_FILES([Makefile doc/Makefile])
AC_OUTPUT

