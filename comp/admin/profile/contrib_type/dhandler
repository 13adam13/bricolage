%#-- Begin HTML --#
<& '/widgets/wrappers/sharky/header.mc', title => "$disp Profile",
   jsInit => "showForm('text')",
   context => "Admin | Profile | $disp | $crumb"
&>
<& '/javascripts/profile/formValidator.js', id => $id &>
<form method="post" action="<% $r->uri %>" name="ct_profile">
<%perl>;
$m->comp('/widgets/profile/hidden.mc', value => $id, name => 'contrib_type_id')
  if defined $id;

# Output the primary fields.
$m->comp("/widgets/wrappers/sharky/table_top.mc",
  	 caption => "Properties", number  => 1);
$m->comp('/widgets/profile/dumpRemainingFields.mc', objref => $grp,
	 readOnly => $no_edit, fieldsUsed => { active => 1, parent_id => 1 });
$m->comp("/widgets/wrappers/sharky/table_bottom.mc");


my $all = $grp->all_for_member_subsys;
# sort the attrs and build an array
my $attr = [];
my @sortedAttrs = sort { $all->{$a}{meta}{pos}{value}
			 <=> $all->{$b}{meta}{pos}{value} } keys %$all;

foreach my $key (@sortedAttrs ) {
    $all->{$key}{name} = $key;
    push @$attr, $all->{$key};
}

my $num_fields = @$attr;
my $sel_opts = [(1..$num_fields)];

# display attrs
$m->comp("/widgets/wrappers/sharky/table_top.mc",
	 caption => "Custom Fields",
	 number  => 3);

if ($num_fields) {
    $m->comp("/widgets/profile/displayAttrs.mc",
	     attr        => $attr,
	     readOnly    => $no_edit,
	     usePosition => 1,
	     useDelete   => 1
	    );
} else {
    # Output a message if no attributes defined, yet.
    $m->out(qq{<span class="label">No custom fields defined.</span>\n})
      unless $num_fields;
}

# Close the table.
$m->comp("/widgets/wrappers/sharky/table_bottom.mc");

if (!$no_edit) {
# Output the formBuilder.
$m->comp('/widgets/formBuilder/formBuilder.mc',
	 numFields => 0,
	 widget => 1,
	 formName => 'ct_profile',
	 numFields => $num_fields,
	 num => 3,
	 caption => 'Add New Field'
	);
} else {
    # Add the buttons.
    $m->comp('/widgets/profile/formButtons.mc',
	     type => $type,
	     section => $section,
	     no_del => 1,
	     no_save => 1
	    );
}
</%perl>

<& '/widgets/wrappers/sharky/footer.mc', param => \%ARGS &>

%#-- End HTML --#


%#-- Once Section --#
<%once>;
my $class = 'Bric::Util::Grp::Person';
my $type = 'contrib_type';
my $section = 'admin';
my $disp = get_disp_name($type);
my %meta_props = ( type => 'type',
		   length => 'length',
		   maxlength => 'maxlength',
		   rows => 'rows',
		   cols => 'cols',
		   multiple => 'multiple'
		 );
</%once>

%#-- Args Section --#
<%args>
$id => undef
</%args>

%#-- Init Section --#
<%init>;
$id ||= $ARGS{contrib_type_id};

# Instantiate an object.
my $grp = defined $id ? $class->lookup({ id => $id})
                      : $class->new;

$id ||= $grp->get_id;

# Check authorization.
chk_authz($grp, $id ? READ : CREATE);
my $no_edit = !chk_authz($grp, ($id ? EDIT : CREATE), 1);
my $no_del = !$id || $no_edit || $grp->get_permanent;

# Get the name for the breadcrumb trail.
my $crumb = $grp->get_name;
$crumb = $crumb ? "&quot;$crumb&quot;" : 'New';
</%init>

<%doc>
###############################################################################

=head1 NAME

/admin/profile/contrib_type/dhandler - Contributor Type profile interface

=head1 VERSION

$Revision: 1.6 $

=head1 DATE

$Date: 2001-12-10 21:39:21 $

=head1 DESCRIPTION

Diplays the profile for contributor types (groups of people).

</%doc>
