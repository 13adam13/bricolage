<& '/widgets/wrappers/header.mc',
    title => "$disp Events",
    context => "Workflow | Profile | $disp | &quot;"
        . $obj->get_name . "&quot; | Events"
&>

<form method="post" action="<% $r->uri %>">

<& /widgets/wrappers/table_top.mc,
   caption => $lang->maketext('Filter'),
   search  => 1
&>

<& '/widgets/search/filter.html',
    objs     => \@event_types,
    selected => $filter_by,
    type     => $type
&>

<& '/widgets/wrappers/table_bottom.mc' &>

<& '/widgets/eventList/eventList.mc',
    object => $type,
    obj_id => $id,
    alert_uri => "/workflow/alerts",
    ( scalar @$filter_by ? (constrain => { key_name => ANY(@$filter_by) }) : () )
&>

<& '/lib/util/back_button.mc' &>

</form>

<& '/widgets/wrappers/footer.mc' &>

<%args>
$id => undef
$filter_by => undef
</%args>
<%init>
# Figure out where we are.
my ($type, $oid) = (parse_uri($r->uri))[2,3];

# Redirect if necessary.
$m->comp('/errors/404.mc') unless $type;

# Instantiate the object and check permissions.
$id ||= $oid;
my $pkg = get_package_name($type);
my $obj = $pkg->lookup({ id => $id });
chk_authz($obj, READ);

my $disp = get_disp_name($type);

$filter_by = mk_aref($filter_by);
my @event_types = sort { $a->get_name cmp $b->get_name } @{Bric::Util::EventType->list({ class => $pkg })};
</%init>