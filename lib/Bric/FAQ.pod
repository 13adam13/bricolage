=head1 NAME

Bric::FAQ - Bricolage Frequently Asked Questions

=head1 VERSION

$Revision: 1.16 $

=head1 DATE

$Date: 2003-09-10 18:39:07 $

=head1 DESCRIPTION

This document tries to answer questions asked frequently
on the mailing list or other questions that people might
have when starting out with or evaluating Bricolage.

=head1 FAQs

=head2 Evaluating Bricolage

This section answers questions that someone evaluating
Bricolage might have.

=head3 Does Bricolage support databases other than PostgreSQL?

Currently only PostgreSQL support is maintained. There is
an Oracle driver, but it's old and not known to work. David
says there is also a MySQL driver somewhere, though I don't
see it in the sources.

Many people have asked whether Bricolage will support
MySQL. The problem used to be that MySQL didn't support
transactions; now it can, but there is no support in
Bricolage for it yet. Patches are welcome.

=head3 How well does Bricolage perform?

I dunno. [compare to mod_perl, CGI, static, other CMSs ... ?]

=head3 How does Bricolage compare to other content management systems?

It has received praise for being as good as or better than commercial
alternatives. For example, see
L<http://www.eweek.com/article2/0,3959,652977,00.asp>

=head3 Who uses Bricolage?

Some that we know of are:

=over 4

=item *

The PIRT Group - L<http://thepirtgroup.com/>

=item *

World Health Organization - L<http://www.who.int/>

=item *

DFA - L<http://dfafunds.com/>

=item *

Macworld - L<http://www.macworld.com/>

=item *

MacCentral - L<http://www.maccentral.com/>

=item *

Ad Council - L<http://www.adcouncil.org/>

=item *

Open Forum Europe - L<http://www.openforumeurope.org/>

=head3 Are there any commercial support offerings for Bricolage?

Yes. Kineticode, founded by Bricolage maintainer and lead developer David
Wheeler, offers a range of technical support and templating support options,
as well as Bricolage consulting services. Learn more at
L<http://kineticode.com/services/>.

=back

=head3 Are there any commercial support offerings for Bricolage?

Yes. Kineticode, founded by Bricolage maintainer and lead developer David
Wheeler, offers a range of technical support and templating support options,
as well as Bricolage consulting services. Learn more at
L<http://kineticode.com/services/>.

=head2 Installation

=head3 Why does mod_perl have to be statically compiled into Apache? I've been using mod_perl as a DSO and have had no problems with it at all.

You are very fortunate, because mod_perl 1.x is just not too stable as a
DSO. Weird things tend to happen. That's not to say that some haven't set it
up as a DSO and just had it work, but we've seen all sorts of unexplainable
problems just evaporate when users have switched from a DSO to a static
mod_perl. And it's not Bricolage so much as Mason where the problems are
noticed. The Mason site (L<http://www.masonhq.com/>) has a
couple of FAQs that mention the issue:

=over 4

=item *

L<http://www.masonhq.com/docs/faq/#why_am_i_getting_segmentation_fa>

=item *

L<http://www.masonhq.com/docs/faq/#does_mason_leak_memory>

=back

You can also search the Mason Users list archives
(L<http://marc.theaimsgroup.com/?l=mason>) and the mod_perl
Users list
archives (L<http://marc.theaimsgroup.com/?l=apache-modperl>) for some
discussions of this issue.

=head2 Error Messages

This section contains questions about error messages output
by Bricolage.

=head3 If C<make cpan> fails, what can I do?

Bricolage depends heavily on CPAN modules. The purpose of C<make cpan> is to
verify that the required CPAN modules exist and, if not, fetch and install
them from CPAN, whenever possible. In the worst case where it cannot handle
the an error automatically, it gives instruction on how to do it manually.
Usually, the instruction tell you to

  perl -MCPAN -e shell
  look package::module
  perl Makefile.PL
  make
  make test
  make install

where C<package::module> is the name of the file to look for.

Sometimes, it will exit with a error without telling you what to do. Read the
last few lines of the output. See which C<package::module> caused the
error. Then manually install the module using the procedure outlined
above. If, when carrying out the procedures described above, C<make test>
fails, you might still want to go ahead with C<make install>
nonetheless. However, bear in mind that the module might not be installed
properly. After this, rerun C<make cpan>.

For an example, at this writing (2 August 2003), C<Apache::ConfigFile> can
cause a permission problem. C<make cpan> will report a strings of

  cannot set uid=88nnnn, gid=nnnnn

Read a few line before the error message to determine the actual location of
the download file, it is usually something like
F</root/.cpan/sources/authors/id/N/NW/NWIGER/Apache-ConfigFile-0.14.gz>. C<cd>
into the F</root/.cpan/sources/authors/id/N/NW/NWIGER/> directory and untar
the F<tar.gz> file:

  tar -zxvf Apache-ConfigFile-0.14.tar.gz

You will get the same error messages. Note, however, that untar is successful
and the directory F<Apache-ConfigFile-0.14> is created. C<cd> into this
directory and run

  perl Makefile.PL
  make
  make test
  make install

This should succeed. After this, rerun C<make cpan> again. More information
can be founded in L<http://bugzilla.bricolage.cc/show_bug.cgi?id=435>.

Sometimes, C<make cpan> reports that a CPAN module is not found. This could be
because it is trying to get an older version of the CPAN module which CPAN no
longer hosts because your CPAN index file is out-of-date and needs to be
refreshed. To refresh your CPAN index file,

  perl -MCPAN -e 'reload index'

and repeat C<make cpan>.

Sometimes you might need to update your CPAN bundle, itself:

  perl -MCPAN -e 'install Bundle::CPAN'

=head3 Why does C<make install> exit with the error 'Missing or empty inst/bricolage.sql!'?

You downloaded Bricolage from CVS and didn't run C<make dist>. Do something
like this:

    # make dist
    [lots of output...]
    # cd bricolage-1.5.0
    # make install

=head3 Why does C<make install> exit with the error 'Unable to set bricolage.conf variable APACHE_BIN to "/usr/local/apache/bin/httpd"'?

Most likely it's because you're installing Bricolage on Red Hat 8 or later and
haven't got 'round to reading F<README.RedHat>. In fact, a fair number of Perl
modules will fail to install or test properly with Perl 5.8 on Red Hat 8. This
is because Red Hat is configured such that it defaults to a Unicode character
set. Bricolage prefers this, of course, since all Bricolage data is stored in
the database in Unicode. However, it does require that you set the C<LANG>
environment variable on Red Hat 8, like this:

  export LANG=en_US

From what we've heard, C<LANG> must not include "utf8". Presumably you should
set C<LANG> to a value for your local language. At any rate, you'll need to
make sure that this is set in your shell in order to install Bricolage and all
of its modules, and you may need to include it in your F<httpd.conf> file, as
well:

  PerlSetEnv LANG en_US

We've also heard that you can set the LANG environment variable globally in
the F</etc/sysconfig/i18n> file. Then you wouldn't need to worry about it
anywhere else.

=head3 Why does C<make install> exit with the error 'IDENT authentication failed for user "postgres"'?

I'm not sure why the IDENT fails. In F<inst/db_grant.pl>, we switch EUID to
that of 'postgres'. Maybe more things need to be set in order to convince
postgresql that you're logging in as 'postgres' instead of 'root'?

I worked around the problem by ignoring it; in pg_hba.conf,

  #local  all         all                                         ident sameuser
  #host   all         all         127.0.0.1        255.0.0.0      ident sameuser
  local   all         all                                         trust
  host    all         all         127.0.0.1        255.0.0.0      trust
  host    all         all         0.0.0.0          0.0.0.0        reject

A Short introduction to F<pg_hba.conf> can be found in L<Bric::DBA|Bric::DBA>,
and it is more thoroughly documented at
L<http://www.postgresql.org/docs/current/interactive/client-authentication.html>.

=head3 Why do I get a 404 when I connect to the Bricolage UI and get an error like the following in Apache's F<error_log>?

  [error] [client 127.0.0.1] Error executing AccessHandler: Bric::App::Session -- /usr/local/lib/perl5/site_perl/5.8.0/Bric/App/Session.pm -- 236
  Difficulties tie'ing the session hash to file '/tmp/bricolage/session'

Most likely it is because one or more files or directories in your Bricolage
temp directory are no longer writable by the Apache user. You need to C<chown>
the temp file directories and restart Bricolage:

  sudo chown -R nobody:nobody /tmp/bricolage
  sudo bric_apachectl restart

=head3 When I try to login to Bricolage, I get redirected to F</login>, but the page is blank. There's nothing in the HTML source except C<< <html><head></head></html> >> or nothing at all. There are no errors in the error log or the access log. What's wrong?

I've seen this a couple of times, but the cause was different each time. On
one occasion, there was a F<FilesMatch> directive in a separate VirtualHost
directive in F<httpd.conf> that was preventing Mason from seeing any of the
Bricolage UI components. The directive that caused the problem looked like
this:

  <FilesMatch "\.mas">
    SetHandler  perl-script
    PerlHandler Bric::App::Handler
  </FilesMatch>

I have no idea why this would have caused a problem, but when it was removed,
Bricolage started working again.

On another occasion, a user noticed that the files F<comp/login/dhandler> and
F<comp/login/welcome.html> were empty. This caused the equivalent of a
"Document Contains No Data" error, only it didn't. In fact, in my tests, under
these circumstances, the browser had no HTML source at all (although I was
later told that a Mozilla setting can force the C<< <html><head></head></html>
>> to be added). At any rate, the problem was fixed by reinstalling Bricolage
(a C<make upgrade> would probably do the trick, too), but it's likely that
simply copying these two files from the Bricolage source directories to your
installed component root will correct the problem. Holler on the
bricolage-general mail list if it doesn't.

=head3 When I try to login to Bricolage, I get redirected to F</login>, but the web server reported a "500 Internal Server Error". What's wrong?

Look in your Apache F<error_log> file. If you find an error along the lines of

 cannot login ...

Then you need to update your F<pg_hba.conf> file as described in the section
L</"Why does C<make install> exit with the following error?">. In fact, as
David Wheeler suggested in one of the email in the C<bricolage-general>
mailing list, if you issue the following command on the command line:

  /usr/local/pgsql/bin/pgsql -U bric bric

you will get

  IDENT authentication failed for user "bric"

Thus demonstrating that you're dealing with a PostgreSQL configuration issue,
rather than a Bricolage issue.

=head3 I'm trying to restore a backup of the Bricolage database, but I keep getting an error like this: "ERROR: Function login_avail(varchar, numeric, numeric) does not exist". What gives?

This is a known issue with PostgreSQL's C<pg_dump> utility -- it's not smart
enough to handle circular dependencies. The PostgreSQL developers are aware of
the issue. See this bug report for details:
L<http://archives.postgresql.org/pgsql-bugs/2002-09/msg00278.php>.

In the meantime, the workaround is to edit your SQL dump file so that the
Bricolage database will load properly. In your SQL dump file, search for and
remove the line containing the string 'CONSTRAINT "ck_usr__login"'. This
should remove the creation of the constraint that uses the C<login_avail()>
function before the function is created. Next, go to the very end of the
SQL dump file and add these lines:

  ALTER TABLE usr ADD CONSTRAINT ck_usr__login
  CHECK (login_avail(LOWER(login), active, id));

This will add the constraint at the very end of the load, when both the "usr"
table and the C<login_avail()> function have been created. Now you should be
able to load the database and get back to work!

=head2 Element Administration

=head3 I added a field to an element and deleted it, and now I can't add a new field with the same name. Why not?

Fields cannot have the same name, even if they've been deleted. This is
because you might have older stories around that use the old name, and still
republish them to templates that use the old name.

The solution is to give the new version of the field a different name, but
make the "Label" the same. So you might have a name like "new_paragraph" and
the label "Paragraph". Just remember to change any references to the old field
name in your templates to use the new field name.

=head2 Miscellaneous

This section contains questions that didn't fit in the other
sections.

=head3 What does "Bricolage" mean?

Click on the Bricolage log in in the UI to see the "About" section of the
online help.

=head3 How did Bricolage get started? What is its history?

[In the beginning there was chaos....]

=head3 Where can I get more information?

Read the F<README> document in the directory where you unpacked Bricolage to
learn about other documents on specific things like Bricolage administration,
usage, or hacking. The project's web site is
L<http://www.bricolage.cc/>. The
web site lists information about mailing lists.

=head3 I can't get my head around the idea of workflow. Is there any documentation on it?

Not really, no. We'll likely write some one of these days. in the meantime,
you might find some use in a presentation given at the 2000 OSCON by Ian
Kallen, in which he discussed what Salon needed out of a CMS (including
workflow) and how he came to select the tools to use the CMS that was the
proof-of-concept for Bricolage. The article is at
L<http://www.salon.com/contact/staff/idk/print.html>.

=head2 Template Administration

=head3 I added a template to a category and then deleted it, and now I can't add a new
template with the same name. Why not?

Deleted template profiles don't actually get deleted but instead marked
inactive in the database. This prevents creating a new template with the same
name in them same category in the same output channel. In a future release, an
easy way to reactivate deleted template profiles will be integrated in the
GUI.

In the meantime, deleted (that is, deactivated) template can be brought back
by using a updating the database directly and querying against the output
channel ID and the template's file name:

  psql -U [username] -d [databasename] -c \
    "UPDATE formatting SET active = 1 WHERE output_channel__id = [ocid] \
     AND file_name = '[path]'"

The arguments in brackets above are:

=over 4

=item username

The username for your Bricolage PostgreSQL user. This is the username the
Bricolage installer created for you, and which is listed as the C<DBI_USER>
F<bricolage.conf> directive.

=item databasename

The name of the Bricolage database. This is the database the Bricolage
installer created for you, and which is listed as the C<DB_NAME>
F<bricolage.conf> directive.

=item ocid

The ID of the output channel that the template is in.

=item path

The full URI path name of the template. This is a combination of the category
path and the name of the template, usually constructed from the element for
which it is created. For example, a Mason template created for the "Book
Review" element in the category "/reviews/books" would be called
F</reviews/books/book_review.mc>.

=back

=head1 AUTHOR

Scott Lanning <slanning@theworld.com>

David Wheeler <david@kineticode.com>

=head1 SEE ALSO

F<README>,
L<http://bricolage.cc/>,
L<Bric::Admin|Bric::Admin>

=cut
